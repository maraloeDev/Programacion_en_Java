package com.maraloedev.Ejemplos;

import java.awt.Dimension;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author macarena
 *
 * Ejemplo de execución de consultas con el método EXECUTE.
 * Para ello se trabaja con la base de datos relacional MySQL llamada 'ejemplo' que
 * consta de una única tabla 'tabla1' con 4 columnas. La conexión a la bd se
 * hará utilizando el usuario root sin contraseña.
 *
 * OPERATIVA: El usario introduce una sentencia SQL en la caja de texto, pulsa el botón
 * y el resultado aparece en el área de texto si se devuelven resultados, o un mensaje
 * en cualquier otro caso.
 * Como el usuairo puede introducir cualquier sentencia SQL (SELECT, INSERT, ...) tenemos
 * que ejecutar con el método execute.
 *
 * Los bloques de manejo de excepciones que se usan son try-with-resources.
 * 
 * EJEMPLOS DE EJECUCIÓN:
 *  1. select * from tabla1;
 *  2. insert into tabla1 values ('texto','texo',123);
 *  3. update tabla1 set columna3=999 where columna3=123;
 *  4. delete from tabla1;
 *  5. Cualquier sentencia errónea es manejada mediante excepciones mostrando el error en un JOptionPane.
 *
 */


public class EjemploExecute extends javax.swing.JFrame {

    private String url = "jdbc:mysql://localhost:3306/ejemplo";

    public EjemploExecute() {
        initComponents();
        this.setTitle("Ejemplo comando 'execute'");
        this.setSize(new Dimension(400, 400)); //tamaño de la ventana
        this.setLocationRelativeTo(null); //para colocar la ventana al centro de la pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        botonEjecutar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ejemplo Acceso a Base de Datos");

        botonEjecutar.setText("Ejecutar");
        botonEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEjecutarActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                    .addComponent(botonEjecutar, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonEjecutar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void botonEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEjecutarActionPerformed
        this.jTextArea1.setText("");
        try ( Connection con = DriverManager.getConnection(url, "root", "");) {
            Statement consulta = con.createStatement();
            boolean tieneDatos = consulta.execute(this.jTextField1.getText());
            if (tieneDatos) { //devuelve resultset
                ResultSet resultado = consulta.getResultSet(); //recuperamos el ResultSet
                if (resultado != null) {
                    
                    //uso de METADATOS porque no sabemos la SELECT que se ha procesado.
                    ResultSetMetaData rsMD = resultado.getMetaData();
                    //recuperados los metadaos podemos saber las columnas de la SELECT
                    int numCampos = rsMD.getColumnCount();
                    String texto = "";
                    for (int i = 1; i <= numCampos; i++) {
                        if (i < numCampos) {
                            texto += rsMD.getColumnName(i) + "  ";
                        } else {
                            texto += rsMD.getColumnName(i);
                        }
                    }
                    texto += "\n";
                    for (int i = 0; i < 80; i++) {
                        texto += "-";
                    }
                    texto += "\n";
                    //ahora mostramos los datos, recorriendo el ResultSet de datos
                    while (resultado.next()) {
                        for (int i = 1; i <= numCampos; i++) {
                            if (i < numCampos) {
                                texto += resultado.getString(i) + "  ";
                            } else {
                                texto += resultado.getString(i);
                            }
                        }
                        texto += "\n";
                    }
                    this.jTextArea1.setText(texto);
                }
            } else { //sentencia de actualización UPDATE, INSERT o DELETE
               JOptionPane.showMessageDialog(null, "Actualización realizada", "Información", JOptionPane.INFORMATION_MESSAGE);     
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);          
        } 

    }//GEN-LAST:event_botonEjecutarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new EjemploExecute().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEjecutar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
