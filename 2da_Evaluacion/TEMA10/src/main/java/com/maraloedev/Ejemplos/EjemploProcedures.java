/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.maraloedev.Ejemplos;

import java.awt.Dimension;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author macarena
 */
public class EjemploProcedures extends javax.swing.JFrame {

    /**
     *
     * @author macarena
     *
     * Ejemplo de ejecución de procedimientos almaenados en la base de datos
     * relacional MySQL llamada 'gf' que consta de una única tabla 'alumnos' con
     * 4 columnas. La conexión a la bd se hará utilizando el usuario root sin
     * contraseña.
     *
     * Los bloques de manejo de excepciones que se usan son try-with-resources.
     *
     */
    private String url = "jdbc:mysql://localhost:3306/gf";

    public EjemploProcedures() {
        initComponents();
        this.setTitle("Ejemplo Procedimientos almacenados");
        this.setLocationRelativeTo(null); //para colocar la ventana al centro de la pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonObtenerNota = new javax.swing.JButton();
        botonIncremento = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonObtenerNota.setText("Obtener nota");
        botonObtenerNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonObtenerNotaActionPerformed(evt);
            }
        });

        botonIncremento.setText("Incrementar notas");
        botonIncremento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIncrementoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(botonObtenerNota)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonIncremento)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonIncremento)
                    .addComponent(botonObtenerNota))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que llama al procedimeinto almacenado 'obtener_nota_alumno'. 
     * El cual tiene un parámetro de entrada correspondiente al ID del alumno,
     * y un parámetro de salida con la nota asociada.
     */
    private void botonObtenerNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonObtenerNotaActionPerformed
        try ( Connection con = DriverManager.getConnection(url, "root", "");) {
            String valor1 = JOptionPane.showInputDialog("ID alumno: ");
            CallableStatement cs = con.prepareCall("{call(obtener_nota_alumno(?,?)}");
            cs.setInt(1, Integer.parseInt(valor1));
            cs.registerOutParameter(2,java.sql.Types.DECIMAL);
                        
            if (cs.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(this, "Nota: " + cs.getDouble(2), null, JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Alumno inexistente", null, JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_botonObtenerNotaActionPerformed

    /**
     * Método que llama al procedimeinto almacenado 'incrementar_notas'. 
     * El cual tiene un parámetro de entrada correspondiente al incremento a aplicar
     * a las notas de todos los alumnos.
     */
    private void botonIncrementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIncrementoActionPerformed
        try ( Connection con = DriverManager.getConnection(url, "root", "");) {
            String valor1 = JOptionPane.showInputDialog("Incremento nota: ");
            CallableStatement cs = con.prepareCall("{call(incrementar_notas(?)}");
            cs.setDouble(1, Double.parseDouble(valor1));
                        
            if (cs.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(this, "Notas actualizadas", null, JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error actualización", null, JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_botonIncrementoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EjemploProcedures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EjemploProcedures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EjemploProcedures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EjemploProcedures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EjemploProcedures().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonIncremento;
    private javax.swing.JButton botonObtenerNota;
    // End of variables declaration//GEN-END:variables
}
