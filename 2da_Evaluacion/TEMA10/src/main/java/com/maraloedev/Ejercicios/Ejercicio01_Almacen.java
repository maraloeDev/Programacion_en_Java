package com.maraloedev.Ejercicios;

import com.maraloedev.clases.Productos;
import com.maraloedev.clases.TiposProducto;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class Ejercicio01_Almacen extends javax.swing.JFrame {

    //Credenciales de la base de datos
    static String url = "jdbc:mysql://localhost:3306/almacen";
    static String user = "root";
    static String password = "";

    //Objetos para la CRUD de la base de datos
    static PreparedStatement ps;
    static ResultSet rs;

    //Objetos de las tablas
    static Productos p;
    static TiposProducto tp;

    static int tipoProd;

    //Modelos combo-lista
    static DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
    static DefaultListModel modeloLista = new DefaultListModel();

    /**
     * Creates new form Ejercicio01_Almacen
     */
    public Ejercicio01_Almacen() {
        initComponents();
        setFrame();
        components();
    }

    private void setFrame() {
        setLocationRelativeTo(null);
        setResizable(false);
    }

    private void components() {
        tiposProducto();
        listaProductos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboProds = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaProds = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Almacén");

        jLabel1.setText("Tipo producto:");

        comboProds.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboProdsItemStateChanged(evt);
            }
        });

        listaProds.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado de productos"));
        listaProds.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaProdsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaProds);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboProds, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboProds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboProdsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboProdsItemStateChanged
        listaProductos();
    }//GEN-LAST:event_comboProdsItemStateChanged

    private void listaProdsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaProdsMouseClicked
        mostrarCantidad();
    }//GEN-LAST:event_listaProdsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ejercicio01_Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ejercicio01_Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ejercicio01_Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ejercicio01_Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ejercicio01_Almacen().setVisible(true);
        });
    }

    private Connection conexionBD() throws SQLException {
        return DriverManager.getConnection(url, user, password);
    }

    private void tiposProducto() {
        comboProds.setModel(modeloCombo);

        try (Connection conn = conexionBD()) {
            ps = conn.prepareStatement("SELECT * FROM tiposproducto");
            rs = ps.executeQuery();
            modeloCombo.addElement("(elige uno)");

            while (rs.next()) {
                modeloCombo.addElement(tp = new TiposProducto(rs.getInt("idTipo"), rs.getString("tipo").charAt(0)));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Ejercicio01_Almacen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void listaProductos() {
        listaProds.setModel(modeloLista);
        modeloLista.clear();

        try (Connection con = conexionBD()) {
            ps = con.prepareStatement("SELECT * FROM productos WHERE tipo = ?");
            //TIPO
            String seleccionTipoProd = modeloCombo.getSelectedItem().toString();

            if (seleccionTipoProd.equals("(elige uno)")) {
                JOptionPane.showMessageDialog(null, "Selecciona un tipo de producto");
                return;
            }

            tipoProd = 0;
            switch (seleccionTipoProd) {
                case "A" ->
                    tipoProd = 1;
                case "B" ->
                    tipoProd = 2;
                case "C" ->
                    tipoProd = 3;
            }

            ps.setInt(1, tipoProd);

            rs = ps.executeQuery();

            while (rs.next()) {
                modeloLista.addElement(p = new Productos(
                        rs.getInt("idProducto"),
                        rs.getString("descripcion"),
                        rs.getDouble("precio"),
                        rs.getInt("cantidad"),
                        rs.getInt("tipo")));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Ejercicio01_Almacen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void mostrarCantidad() {
        int cantidad = p.getCantidad();
        
        if(cantidad <=10) {
            JOptionPane.showMessageDialog(null, "Nº de unidades:"+cantidad+"\nDebajo del stock de seguridad");
        } else {
            JOptionPane.showMessageDialog(null, "Nº de unidades:"+cantidad);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboProds;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaProds;
    // End of variables declaration//GEN-END:variables
}
