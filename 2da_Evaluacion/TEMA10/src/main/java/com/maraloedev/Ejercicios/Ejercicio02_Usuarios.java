package com.maraloedev.Ejercicios;

import com.maraloedev.clases.Usuario;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class Ejercicio02_Usuarios extends javax.swing.JFrame {

    /**
     * Creates new form Ejercicio02_Usuarios
     */
    static String url = "jdbc:mysql://localhost:3306/usuarios";
    static String user = "root";
    static String password = "";
    static PreparedStatement ps;
    static ResultSet rs;

    static Usuario u;

    public Ejercicio02_Usuarios() {
        initComponents();
        setFrame();
    }

    private void setFrame() {
        setLocationRelativeTo(null);
        setResizable(false);
        confirmacion.setVisible(false);
        jLabel3.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usuariointroducido = new javax.swing.JTextField();
        contrasenaIntroducida = new javax.swing.JPasswordField();
        botonBorrar = new javax.swing.JButton();
        botonAceptar = new javax.swing.JButton();
        registro = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        confirmacion = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");

        jLabel1.setText("Usuario");

        jLabel2.setText("Contraseña");

        contrasenaIntroducida.setToolTipText("");

        botonBorrar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Eduardo\\Desktop\\Programacion_en_Java\\2da_Evaluacion\\TEMA10\\src\\main\\java\\com\\maraloedev\\Imagenes\\Eliminacion.png")); // NOI18N
        botonBorrar.setMaximumSize(new java.awt.Dimension(59, 56));
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        botonAceptar.setIcon(new javax.swing.ImageIcon("C:\\Users\\Eduardo\\Desktop\\Programacion_en_Java\\2da_Evaluacion\\TEMA10\\src\\main\\java\\com\\maraloedev\\Imagenes\\Confirmacion.png")); // NOI18N
        botonAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonAceptarMouseClicked(evt);
            }
        });

        registro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        registro.setForeground(new java.awt.Color(0, 0, 204));
        registro.setText("<html><u>¿Todavia no te has registrado?</u></html>");
        registro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registroMouseClicked(evt);
            }
        });

        jLabel3.setText("Confirmacion");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(botonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(contrasenaIntroducida)
                                    .addComponent(confirmacion)
                                    .addComponent(usuariointroducido)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(registro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)))
                .addGap(9, 9, 9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(usuariointroducido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(contrasenaIntroducida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(confirmacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(registro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAceptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAceptarMouseClicked
        if (!confirmacion.isVisible() && !jLabel3.isVisible()) {
            credencialesUsuarios();
        } else {
            registro();
        }
    }//GEN-LAST:event_botonAceptarMouseClicked

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
        usuariointroducido.setText("");
        contrasenaIntroducida.setText("");
    }//GEN-LAST:event_botonBorrarActionPerformed

    private void registroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registroMouseClicked
        registro();
    }//GEN-LAST:event_registroMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ejercicio02_Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ejercicio02_Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ejercicio02_Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ejercicio02_Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ejercicio02_Usuarios().setVisible(true);
        });
    }

    private Connection conexionBD() throws SQLException {
        return DriverManager.getConnection(url, user, password);
    }

    private void credencialesUsuarios() {
        String usuario = usuariointroducido.getText();
        String contrasena = new String(contrasenaIntroducida.getPassword());

        if (usuario.isEmpty() || contrasena.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Usuario o contraseña vacíos");
            return;
        }
        //Credenciales correctas
        try (Connection con = conexionBD()) {
            ps = con.prepareStatement("SELECT login FROM usuario WHERE login = ? AND password = ?");
            ps.setString(1, usuario);
            ps.setString(2, contrasena);

            rs = ps.executeQuery();
            if (rs.next()) {
                setTitle("Conectado");
            } else {
                JOptionPane.showMessageDialog(null, "Usuario inexistente\nProcede al registro");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Ejercicio02_Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void registro() {
        setTitle("Registro");
        setLocationRelativeTo(null);
        setResizable(false);
        registro.setVisible(false);
        confirmacion.setVisible(true);
        jLabel3.setVisible(true);

        // Obtener datos del formulario
        String usuario = usuariointroducido.getText();
        String contrasena = new String(contrasenaIntroducida.getPassword());
        String contrasenaConfirmada = new String(confirmacion.getPassword()); // Suponiendo que este campo exista

        // Validar campos vacíos
        if (usuario.isEmpty() || contrasena.isEmpty() || contrasenaConfirmada.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Los campos están vacíos");
            return;
        }

        // Validar coincidencia de contraseñas
        if (!contrasena.equals(contrasenaConfirmada)) {
            JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden");
            return;
        }

        // Guardar en base de datos
        try (Connection conn = conexionBD()) {
            ps = conn.prepareStatement(
                    "INSERT INTO usuario (login, password, blocked) VALUES (?, ?, ?)"
            );
            ps.setString(1, usuario);
            ps.setString(2, contrasena);
            ps.setInt(3, 0);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Usuario agregado correctamente");
        } catch (SQLException ex) {
            Logger.getLogger(Ejercicio02_Usuarios.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error al registrar el usuario");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JPasswordField confirmacion;
    private javax.swing.JPasswordField contrasenaIntroducida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel registro;
    private javax.swing.JTextField usuariointroducido;
    // End of variables declaration//GEN-END:variables
}
